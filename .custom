(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(Man-notify-method (quote newframe))
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(ansi-color-names-vector
   ["black" "#d55e00" "#009e73" "#f8ec59" "#0072b2" "#cc79a7" "#56b4e9" "white"])
 '(auto-revert-verbose nil)
 '(case-fold-search t)
 '(comint-input-ignoredups t)
 '(compilation-scroll-output (quote first-error))
 '(compilation-window-height 15)
 '(custom-enabled-themes (quote (tsdh-light)))
 '(custom-safe-themes
   (quote
    ("ecb9fe1d5b165a35499191a909b2b5710a52935614058b327a39bfbbb07c7dc8" "e35505a8cdb1eddfb691aee75b2b3b42c16f05c9b42026015ed982b3f4ccb651" "eb90042bd42c41f7fe04f87faa2e17b72371e73f2be01288110dde88252aab9b" "1e7e097ec8cb1f8c3a912d7e1e0331caeed49fef6cff220be63bd2a6ba4cc365" "fc5fcb6f1f1c1bc01305694c59a1a861b008c534cae8d0e48e4d5e81ad718bc6" default)))
 '(cvs-auto-remove-handled (quote delayed))
 '(deft-extension "md")
 '(deft-markdown-mode-title-level 1)
 '(deft-text-mode (quote markdown-mode))
 '(deft-use-filename-as-title t)
 '(deft-use-filter-string-for-filename t)
 '(delete-by-moving-to-trash t)
 '(delete-old-versions t)
 '(dired-auto-revert-buffer (quote dired-directory-changed-p))
 '(dired-dnd-protocol-alist nil)
 '(dired-dwim-target nil)
 '(dired-find-subdir t)
 '(dired-kept-versions 3)
 '(dired-listing-switches "-alh")
 '(dired-omit-size-limit 100000)
 '(dired-omit-verbose nil)
 '(dired-recursive-copies (quote always))
 '(dired-recursive-deletes (quote top))
 '(eshell-prompt-function (lambda nil (if (= (user-uid) 0) "# " "& ")))
 '(eshell-prompt-regexp "^[^#$
]* ?[&#$] ")
 '(filesets-data
   (quote
    (("dayone-entries"
      (:pattern "~/Dropbox/AppSupport/Day One/Journal.dayone/entries" "^.+\\.doentry$")))))
 '(find-grep-options "-q -i")
 '(focus-follows-mouse nil)
 '(font-lock-verbose nil)
 '(gnus-play-startup-jingle t)
 '(helm-multi-files-toggle-locate-binding "C-c C-l")
 '(history-delete-duplicates t)
 '(history-length 500)
 '(horizontal-scroll-bar-mode nil)
 '(ido-max-dir-file-cache 20)
 '(indent-tabs-mode nil)
 '(inhibit-startup-screen t)
 '(initial-scratch-message
   "news: 
----
* in helm TAB does (if anything) only completion while C-z opens the actions list
* use M-r in shell-mode to select an earlier input via helm (16-AUG-2017)
* keep in mind international prefix C-x 8 (e.g. C-x 8 \" o for รถ)
* ffap bindings moved to C-x p prefix (so that abbrev binding like C-x a l work!)
* in markdown buffer: C-c C-c s copies (html) output to clipboard
* global binding: C-A o (on apple keyboard: Ctrl-Cmd o) overwrite-mode
* global C-x g bindings: check with C-x g C-h (18-09-2013)
* in locate buffer: k & f flush or keep lines (17-09-2013)
* in locate buffer: C-x-4 c does locate-find-directory-other-window (13-12-2010)
* in dired `dired-kill-tree' is bound to E-k (23-12-2009)

tips:
----
## Use position registers!

`C-x r <SPC> R'
     Record the position of point and the current buffer in register R
     (`point-to-register').

`C-x r j R'
     Jump to the position and buffer saved in register R
     (`jump-to-register').
")
 '(ispell-dictionary "british")
 '(ispell-extra-args nil)
 '(kept-new-versions 3)
 '(kill-do-not-save-duplicates t)
 '(kill-read-only-ok t)
 '(leo-locate-basename-only t)
 '(ls-lisp-verbosity (quote (links)))
 '(magit-diff-options nil)
 '(manual-program "moreman")
 '(markdown-command "multimarkdown")
 '(markdown-content-type "utf8")
 '(markdown-footnote-location (quote immediately))
 '(markdown-indent-on-enter nil)
 '(max-mini-window-height 3)
 '(package-selected-packages
   (quote
    (smart-tab flymd elpy ein edit-indirect lorem-ipsum tango-plus-theme bash-completion deft real-auto-save dash discover git-commit helm-core magit-popup with-editor markdown-mode+ markdown-toc magit async helm)))
 '(password-cache-expiry nil)
 '(recentf-initialize-file-name-history nil)
 '(recentf-keep-non-readable-files-flag t)
 '(recentf-max-saved-items 10000)
 '(revert-without-query (quote ("bibliography.bib")))
 '(rtm-api-key "0434762e401f47c42df669d474ab84b5")
 '(rtm-api-shared-secret "4e81793b72bbba9c")
 '(safe-local-variable-values
   (quote
    ((eval auto-fill-mode t)
     (python-shell-virtualenv-path)
     (python-shell-interpreter . "python3")
     (python-shell-interpreter . "python")
     (dired-actual-switches . "-alhR")
     (dired-actual-switches . "-laht")
     (dired-actual-switches . "-alR")
     (leo-dired-dont-omit . t))))
 '(savehist-autosave-interval 60)
 '(scroll-error-top-bottom t)
 '(tex-fontify-script nil)
 '(tramp-default-method "plink")
 '(tramp-remote-process-environment
   (quote
    ("LC_ALL=C" "TERM=dumb" "EMACS=t" "INSIDE_EMACS='24.1.50.1,tramp:2.2.6-pre'" "CDPATH=" "HISTORY=" "MAIL=" "MAILCHECK=" "MAILPATH=" "PAGER=\"\"" "autocorrect=" "correct=")))
 '(undo-limit 200000)
 '(undo-strong-limit 300000)
 '(uniquify-buffer-name-style (quote post-forward) nil (uniquify))
 '(version-control t)
 '(visible-bell nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(comint-highlight-input ((t (:foreground "dark green" :weight bold))))
 '(comint-highlight-prompt ((t (:foreground "dark green" :weight bold))))
 '(deft-header-face ((t (:inherit deft-summary-face))))
 '(deft-summary-face ((t (:inherit default :foreground "darkgray"))))
 '(deft-time-face ((t (:inherit deft-summary-face))))
 '(deft-title-face ((t (:inherit default))))
 '(dired-flagged ((t (:foreground "firebrick" :weight bold))))
 '(dired-header ((t (:foreground "ForestGreen" :weight bold))))
 '(dired-marked ((t (:foreground "black" :weight bold))))
 '(dired-symlink ((t (:inherit default))))
 '(flyspell-duplicate ((t (:underline t :italic t :inherit shadow))))
 '(flyspell-incorrect ((t (:underline t :italic t :inherit shadow))))
 '(font-lock-string-face ((((class color) (background light)) (:foreground "black"))))
 '(isearch ((((class color) (background light)) (:background "yellow"))))
 '(lazy-highlight ((((class color) (background light)) (:background "khaki"))))
 '(locate-header ((t (:foreground "black" :slant italic))))
 '(region ((((class color) (background light)) (:background "DarkGrey"))))
 '(simple-rtm-list ((t (:foreground "#696969" :weight bold))))
 '(simple-rtm-smart-list ((t (:inherit simple-rtm-list :slant italic))))
 '(simple-rtm-task ((t (:foreground "midnight blue" :height 1.0))))
 '(simple-rtm-task-duedate ((t (:inherit simple-rtm-task :foreground "forest green" :slant italic))))
 '(simple-rtm-task-duedate-due ((t (:inherit simple-rtm-task :foreground "firebrick4" :slant italic))))
 '(simple-rtm-task-priority-1 ((t (:inherit simple-rtm-task-priority-3 :background "gray25"))))
 '(simple-rtm-task-priority-2 ((t (:inherit simple-rtm-task-priority-3 :background "gray60"))))
 '(simple-rtm-task-priority-3 ((t (:inherit simple-rtm-task :background "gray80" :foreground "white"))))
 '(simple-rtm-task-tag ((t (:inherit simple-rtm-task :background "gray75" :foreground "white" :box (:line-width 2 :color "white") :height 0.8))))
 '(simple-rtm-task-time-estimate ((t (:inherit simple-rtm-task :slant italic)))))

;;
;; emacs itself's defs go here
;;
(put 'dired-find-alternate-file 'disabled nil)
(put 'narrow-to-region 'disabled nil)
(put 'downcase-region 'disabled nil)
(put 'upcase-region 'disabled nil)

