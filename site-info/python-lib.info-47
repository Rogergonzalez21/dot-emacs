This is python-lib.info, produced by makeinfo version 4.3 from
python-lib.texi.

October 3, 2003


File: python-lib.info,  Node: Obsolete,  Next: SGI-specific Extension modules,  Prev: Multimedia,  Up: Undocumented Modules

Obsolete
========

These modules are not normally available for import; additional work
must be done to make them available.

Those which are written in Python will be installed into the directory
`lib-old/' installed as part of the standard library.  To use these,
the directory must be added to `sys.path', possibly using `PYTHONPATH'.

Obsolete extension modules written in C are not built by default.
Under UNIX, these must be enabled by uncommenting the appropriate lines
in `Modules/Setup' in the build tree and either rebuilding Python if
the modules are statically linked, or building and installing the
shared object if using dynamically-loaded extensions.

``addpack''
     -- Alternate approach to packages.  Use the built-in package
     support instead.

``cmp''
     -- File comparison function.  Use the newer `filecmp' instead.

``cmpcache''
     -- Caching version of the obsolete `cmp' module.  Use the newer
     `filecmp' instead.

``codehack''
     -- Extract function name or line number from a function code
     object (these are now accessible as attributes: `co.co_name',
     `func.func_name', `co.co_firstlineno').

``dircmp''
     -- Class to build directory diff tools on (may become a demo or
     tool).  _This is deprecated in Python 2.0.  The `filecmp' module
     replaces `dircmp'._

``dump''
     -- Print python code that reconstructs a variable.

``fmt''
     -- Text formatting abstractions (too slow).

``lockfile''
     -- Wrapper around FCNTL file locking (use
     `fcntl.lockf()'/`flock()' instead; see `fcntl').

``newdir''
     -- New `dir()' function (the standard `dir()' is now just as good).

``Para''
     -- Helper for `fmt'.

``poly''
     -- Polynomials.

``regex''
     -- Emacs-style regular expression support; may still be used in
     some old code (extension module).  Refer to the  for documentation.

``regsub''
     -- Regular expression based string replacement utilities, for use
     with `regex' (extension module).  Refer to the  for documentation.

``tb''
     -- Print tracebacks, with a dump of local variables (use
     `pdb.pm()' or `traceback' instead).

``timing''
     -- Measure time intervals to high resolution (use `time.clock()'
     instead).  (This is an extension module.)

``tzparse''
     -- Parse a timezone specification (unfinished; may disappear in the
     future, and does not work when the `TZ' environment variable is
     not set).

``util''
     -- Useful functions that don't fit elsewhere.

``whatsound''
     -- Recognize sound files; use `sndhdr' instead.

``zmod''
     -- Compute properties of mathematical "fields."

The following modules are obsolete, but are likely to re-surface as
tools or scripts:

``find''
     -- Find files matching pattern in directory tree.

``grep''
     -- `grep' implementation in Python.

``packmail''
     -- Create a self-unpacking UNIX shell archive.

The following modules were documented in previous versions of this
manual, but are now considered obsolete.  The source for the
documentation is still available as part of the documentation source
archive.

``ni''
     -- Import modules in "packages."  Basic package support is now
     built in.  The built-in support is very similar to what is
     provided in this module.

``rand''
     -- Old interface to the random number generator.

``soundex''
     -- Algorithm for collapsing names which sound similar to a shared
     key.  The specific algorithm doesn't seem to match any published
     algorithm.  (This is an extension module.)


File: python-lib.info,  Node: SGI-specific Extension modules,  Prev: Obsolete,  Up: Undocumented Modules

SGI-specific Extension modules
==============================

The following are SGI specific, and may be out of touch with the
current version of reality.

``cl''
     -- Interface to the SGI compression library.

``sv''
     -- Interface to the "simple video" board on SGI Indigo (obsolete
     hardware).


File: python-lib.info,  Node: Reporting Bugs,  Next: History and License,  Prev: Undocumented Modules,  Up: Top

Reporting Bugs
**************

Python is a mature programming language which has established a
reputation for stability.  In order to maintain this reputation, the
developers would like to know of any deficiencies you find in Python or
its documentation.

Before submitting a report, you will be required to log into
SourceForge; this will make it possible for the developers to contact
you for additional information if needed.  It is not possible to submit
a bug report anonymously.

All bug reports should be submitted via the Python Bug Tracker on
SourceForge (<http://sourceforge.net/bugs/?group_id=5470>).  The bug
tracker offers a Web form which allows pertinent information to be
entered and submitted to the developers.

The first step in filing a report is to determine whether the problem
has already been reported.  The advantage in doing so, aside from
saving the developers time, is that you learn what has been done to fix
it; it may be that the problem has already been fixed for the next
release, or additional information is needed (in which case you are
welcome to provide it if you can!).  To do this, search the bug
database using the search box near the bottom of the page.

If the problem you're reporting is not already in the bug tracker, go
back to the Python Bug Tracker
(<http://sourceforge.net/bugs/?group_id=5470>).  Select the "Submit a
Bug" link at the top of the page to open the bug reporting form.

The submission form has a number of fields.  The only fields that are
required are the "Summary" and "Details" fields.  For the summary,
enter a _very_ short description of the problem; less than ten words is
good.  In the Details field, describe the problem in detail, including
what you expected to happen and what did happen.  Be sure to include
the version of Python you used, whether any extension modules were
involved, and what hardware and software platform you were using
(including version information as appropriate).

The only other field that you may want to set is the "Category" field,
which allows you to place the bug report into a broad category (such as
"Documentation" or "Library").

Each bug report will be assigned to a developer who will determine what
needs to be done to correct the problem.  You will receive an update
each time action is taken on the bug.

See also:
     `How to Report Bugs Effectively'{Article which goes into some
     detail about how to create a useful bug report.  This describes
     what kind of information is useful and why it is useful.}

     `Bug Writing Guidelines'{Information about writing a good bug
     report.  Some of this is specific to the Mozilla project, but
     describes general good practices.}


File: python-lib.info,  Node: History and License,  Next: Module Index,  Prev: Reporting Bugs,  Up: Top

History and License
*******************

* Menu:

* History of the software::
* Terms and conditions for accessing or otherwise using Python::


File: python-lib.info,  Node: History of the software,  Next: Terms and conditions for accessing or otherwise using Python,  Prev: History and License,  Up: History and License

History of the software
=======================

Python was created in the early 1990s by Guido van Rossum at Stichting
Mathematisch Centrum (CWI, see <http://www.cwi.nl/>) in the Netherlands
as a successor of a language called ABC.  Guido remains Python's
principal author, although it includes many contributions from others.

In 1995, Guido continued his work on Python at the Corporation for
National Research Initiatives (CNRI, see
<http://www.cnri.reston.va.us/>) in Reston, Virginia where he released
several versions of the software.

In May 2000, Guido and the Python core development team moved to
BeOpen.com to form the BeOpen PythonLabs team.  In October of the same
year, the PythonLabs team moved to Digital Creations (now Zope
Corporation; see <http://www.zope.com/>).  In 2001, the Python Software
Foundation (PSF, see <http://www.python.org/psf/>) was formed, a
non-profit organization created specifically to own Python-related
Intellectual Property.  Zope Corporation is a sponsoring member of the
PSF.

All Python releases are Open Source (see <http://www.opensource.org/>
for the Open Source Definition).  Historically, most, but not all,
Python releases have also been GPL-compatible; the table below
summarizes the various releases.

Release        Derived from   Year           Owner          GPL
                                                            compatible?
------         ------         ------         ------         ------
0.9.0 thru     n/a            1991-1995      CWI            yes
1.2                                                         
1.3 thru       1.2            1995-1999      CNRI           yes
1.5.2                                                       
1.6            1.5.2          2000           CNRI           no
2.0            1.6            2000           BeOpen.com     no
1.6.1          1.6            2001           CNRI           no
2.1            2.0+1.6.1      2001           PSF            no
2.0.1          2.0+1.6.1      2001           PSF            yes
2.1.1          2.1+2.0.1      2001           PSF            yes
2.2            2.1.1          2001           PSF            yes
2.1.2          2.1.1          2002           PSF            yes
2.1.3          2.1.2          2002           PSF            yes
2.2.1          2.2            2002           PSF            yes
2.2.2          2.2.1          2002           PSF            yes
2.2.3          2.2.2          2002-2003      PSF            yes
2.3            2.2.2          2002-2003      PSF            yes
2.3.1          2.3            2002-2003      PSF            yes
2.3.2          2.3.1          2003           PSF            yes

_Note:_ GPL-compatible doesn't mean that we're distributing Python
under the GPL.  All Python licenses, unlike the GPL, let you distribute
a modified version without making your changes open source. The
GPL-compatible licenses make it possible to combine Python with other
software that is released under the GPL; the others don't.

Thanks to the many outside volunteers who have worked under Guido's
direction to make these releases possible.


File: python-lib.info,  Node: Terms and conditions for accessing or otherwise using Python,  Prev: History of the software,  Up: History and License

Terms and conditions for accessing or otherwise using Python
============================================================

               *PSF LICENSE AGREEMENT FOR PYTHON 2.3.2*
  1. This LICENSE AGREEMENT is between the Python Software Foundation
     ("PSF"), and the Individual or Organization ("Licensee") accessing
     and otherwise using Python 2.3.2 software in source or binary form
     and its associated documentation.

  2. Subject to the terms and conditions of this License Agreement, PSF
     hereby grants Licensee a nonexclusive, royalty-free, world-wide
     license to reproduce, analyze, test, perform and/or display
     publicly, prepare derivative works, distribute, and otherwise use
     Python 2.3.2 alone or in any derivative version, provided,
     however, that PSF's License Agreement and PSF's notice of
     copyright, i.e., "Copyright (C) 2001-2003 Python Software
     Foundation; All Rights Reserved" are retained in Python 2.3.2
     alone or in any derivative version prepared by Licensee.

  3. In the event Licensee prepares a derivative work that is based on
     or incorporates Python 2.3.2 or any part thereof, and wants to
     make the derivative work available to others as provided herein,
     then Licensee hereby agrees to include in any such work a brief
     summary of the changes made to Python 2.3.2.

  4. PSF is making Python 2.3.2 available to Licensee on an "AS IS"
     basis.  PSF MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
     IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, PSF MAKES NO AND
     DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR
     FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON 2.3.2
     WILL NOT INFRINGE ANY THIRD PARTY RIGHTS.

  5. PSF SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
     2.3.2 FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR
     LOSS AS A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING
     PYTHON 2.3.2, OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE
     POSSIBILITY THEREOF.

  6. This License Agreement will automatically terminate upon a material
     breach of its terms and conditions.

  7. Nothing in this License Agreement shall be deemed to create any
     relationship of agency, partnership, or joint venture between PSF
     and Licensee.  This License Agreement does not grant permission to
     use PSF trademarks or trade name in a trademark sense to endorse
     or promote products or services of Licensee, or any third party.

  8. By copying, installing or otherwise using Python 2.3.2, Licensee
     agrees to be bound by the terms and conditions of this License
     Agreement.

             *BEOPEN.COM LICENSE AGREEMENT FOR PYTHON 2.0*
         *BEOPEN PYTHON OPEN SOURCE LICENSE AGREEMENT VERSION 1*
  1. This LICENSE AGREEMENT is between BeOpen.com ("BeOpen"), having an
     office at 160 Saratoga Avenue, Santa Clara, CA 95051, and the
     Individual or Organization ("Licensee") accessing and otherwise
     using this software in source or binary form and its associated
     documentation ("the Software").

  2. Subject to the terms and conditions of this BeOpen Python License
     Agreement, BeOpen hereby grants Licensee a non-exclusive,
     royalty-free, world-wide license to reproduce, analyze, test,
     perform and/or display publicly, prepare derivative works,
     distribute, and otherwise use the Software alone or in any
     derivative version, provided, however, that the BeOpen Python
     License is retained in the Software, alone or in any derivative
     version prepared by Licensee.

  3. BeOpen is making the Software available to Licensee on an "AS IS"
     basis.  BEOPEN MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
     IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, BEOPEN MAKES NO
     AND DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR
     FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE
     WILL NOT INFRINGE ANY THIRD PARTY RIGHTS.

  4. BEOPEN SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF THE
     SOFTWARE FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR
     LOSS AS A RESULT OF USING, MODIFYING OR DISTRIBUTING THE SOFTWARE,
     OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY
     THEREOF.

  5. This License Agreement will automatically terminate upon a material
     breach of its terms and conditions.

  6. This License Agreement shall be governed by and interpreted in all
     respects by the law of the State of California, excluding conflict
     of law provisions.  Nothing in this License Agreement shall be
     deemed to create any relationship of agency, partnership, or joint
     venture between BeOpen and Licensee.  This License Agreement does
     not grant permission to use BeOpen trademarks or trade names in a
     trademark sense to endorse or promote products or services of
     Licensee, or any third party.  As an exception, the "BeOpen
     Python" logos available at http://www.pythonlabs.com/logos.html
     may be used according to the permissions granted on that web page.

  7. By copying, installing or otherwise using the software, Licensee
     agrees to be bound by the terms and conditions of this License
     Agreement.

               *CNRI LICENSE AGREEMENT FOR PYTHON 1.6.1*
  1. This LICENSE AGREEMENT is between the Corporation for National
     Research Initiatives, having an office at 1895 Preston White Drive,
     Reston, VA 20191 ("CNRI"), and the Individual or Organization
     ("Licensee") accessing and otherwise using Python 1.6.1 software in
     source or binary form and its associated documentation.

  2. Subject to the terms and conditions of this License Agreement, CNRI
     hereby grants Licensee a nonexclusive, royalty-free, world-wide
     license to reproduce, analyze, test, perform and/or display
     publicly, prepare derivative works, distribute, and otherwise use
     Python 1.6.1 alone or in any derivative version, provided,
     however, that CNRI's License Agreement and CNRI's notice of
     copyright, i.e., "Copyright (C) 1995-2001 Corporation for National
     Research Initiatives; All Rights Reserved" are retained in Python
     1.6.1 alone or in any derivative version prepared by Licensee.
     Alternately, in lieu of CNRI's License Agreement, Licensee may
     substitute the following text (omitting the quotes): "Python 1.6.1
     is made available subject to the terms and conditions in CNRI's
     License Agreement.  This Agreement together with Python 1.6.1 may
     be located on the Internet using the following unique, persistent
     identifier (known as a handle): 1895.22/1013.  This Agreement may
     also be obtained from a proxy server on the Internet using the
     following URL: <http://hdl.handle.net/1895.22/1013>."

  3. In the event Licensee prepares a derivative work that is based on
     or incorporates Python 1.6.1 or any part thereof, and wants to make
     the derivative work available to others as provided herein, then
     Licensee hereby agrees to include in any such work a brief summary
     of the changes made to Python 1.6.1.

  4. CNRI is making Python 1.6.1 available to Licensee on an "AS IS"
     basis.  CNRI MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
     IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, CNRI MAKES NO AND
     DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR
     FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON 1.6.1
     WILL NOT INFRINGE ANY THIRD PARTY RIGHTS.

  5. CNRI SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
     1.6.1 FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR
     LOSS AS A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING
     PYTHON 1.6.1, OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE
     POSSIBILITY THEREOF.

  6. This License Agreement will automatically terminate upon a material
     breach of its terms and conditions.

  7. This License Agreement shall be governed by the federal
     intellectual property law of the United States, including without
     limitation the federal copyright law, and, to the extent such U.S.
     federal law does not apply, by the law of the Commonwealth of
     Virginia, excluding Virginia's conflict of law provisions.
     Notwithstanding the foregoing, with regard to derivative works
     based on Python 1.6.1 that incorporate non-separable material that
     was previously distributed under the GNU General Public License
     (GPL), the law of the Commonwealth of Virginia shall govern this
     License Agreement only as to issues arising under or with respect
     to Paragraphs 4, 5, and 7 of this License Agreement.  Nothing in
     this License Agreement shall be deemed to create any relationship
     of agency, partnership, or joint venture between CNRI and
     Licensee.  This License Agreement does not grant permission to use
     CNRI trademarks or trade name in a trademark sense to endorse or
     promote products or services of Licensee, or any third party.

  8. By clicking on the "ACCEPT" button where indicated, or by copying,
     installing or otherwise using Python 1.6.1, Licensee agrees to be
     bound by the terms and conditions of this License Agreement.

                                ACCEPT
          *CWI LICENSE AGREEMENT FOR PYTHON 0.9.0 THROUGH 1.2*
 Copyright
(C) 1991 - 1995, Stichting Mathematisch Centrum Amsterdam, The
Netherlands.  All rights reserved.

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in
supporting documentation, and that the name of Stichting Mathematisch
Centrum or CWI not be used in advertising or publicity pertaining to
distribution of the software without specific, written prior permission.

STICHTING MATHEMATISCH CENTRUM DISCLAIMS ALL WARRANTIES WITH REGARD TO
THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS, IN NO EVENT SHALL STICHTING MATHEMATISCH CENTRUM BE LIABLE FOR
ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.


File: python-lib.info,  Node: Module Index,  Next: Class-Exception-Object Index,  Prev: History and License,  Up: Top

Module Index
************

* Menu:

* _locale:                               locale.
* AL:                                    al.
* bdb:                                   Python Debugger.
* binhex:                                binascii.
* bsddb <1>:                             dbhash.
* bsddb <2>:                             anydbm.
* bsddb:                                 Restrictions.
* CGIHTTPServer:                         BaseHTTPServer.
* cmd:                                   Python Debugger.
* copy:                                  copy_reg.
* cPickle:                               copy_reg.
* crypt:                                 pwd.
* dbhash:                                anydbm.
* dbm <1>:                               gdbm.
* dbm <2>:                               anydbm.
* dbm:                                   Restrictions.
* dumbdbm:                               anydbm.
* end:                                   Match Objects.
* errno <1>:                             socket.
* errno:                                 os.
* failIfAlmostEqual:                     TestCase Objects.
* failIfEqual:                           TestCase Objects.
* failUnless:                            TestCase Objects.
* failUnlessAlmostEqual:                 TestCase Objects.
* failUnlessEqual:                       TestCase Objects.
* failUnlessRaises:                      TestCase Objects.
* fcntl:                                 File Objects.
* formatter:                             htmllib.
* gdbm <1>:                              anydbm.
* gdbm:                                  Restrictions.
* glob:                                  fnmatch.
* htmllib:                               urllib.
* ihooks:                                Built-in Functions.
* imp:                                   Built-in Functions.
* knee:                                  Examples.
* mailbox:                               rfc822.
* math <1>:                              cmath.
* math:                                  Numeric Types.
* mimetools:                             urllib.
* os <1>:                                posix.
* os:                                    File Objects.
* pickle <1>:                            marshal.
* pickle <2>:                            copy.
* pickle <3>:                            shelve.
* pickle <4>:                            copy_reg.
* pickle:                                cPickle.
* pstats:                                Reference Manual.
* pty:                                   File Descriptor Operations.
* pwd:                                   ospath.
* pyexpat:                               xmlparsersexpat.
* re <1>:                                fnmatch.
* re <2>:                                string.
* re:                                    String Formatting Operations.
* rexec:                                 Built-in Functions.
* rfc822:                                mimetools.
* sgmllib:                               htmllib.
* shelve:                                marshal.
* signal:                                thread.
* SimpleHTTPServer:                      BaseHTTPServer.
* sitecustomize:                         site.
* socket <1>:                            Internet Protocols and Support.
* socket:                                File Objects.
* stat:                                  Files and Directories.
* statvfs:                               Files and Directories.
* string <1>:                            Background.
* string <2>:                            locale.
* string:                                String Formatting Operations.
* struct:                                Socket Objects.
* sunaudiodev:                           SUNAUDIODEV.
* SUNAUDIODEV:                           sunaudiodev.
* termios:                               TERMIOS.
* types <1>:                             Type Objects.
* types:                                 Built-in Functions.
* urllib:                                httplib.
* urlparse:                              urllib.
* uu:                                    binascii.

